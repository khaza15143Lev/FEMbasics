:root {
    --primary-color: #2a63b0; /* Blue */
    --secondary-color: #f0f0f0; /* Light Gray */
    --text-color: #333;
    --border-color: #ccc;
    --background-color: #ffffff;
    --highlight-color: #ff9800; /* Orange */
    --node-size: 20px;
    --indicator-line-length: 40px;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.6;
    margin: 0;
    padding: 0;
    background-color: var(--secondary-color);
    color: var(--text-color);
    display: flex;
    flex-direction: column;
    align-items: center;
}

header, main {
    width: 100%;
    max-width: 960px;
    padding: 20px;
    box-sizing: border-box;
}

header {
    background-color: var(--primary-color);
    color: white;
    text-align: center;
    padding: 40px 20px;
    border-bottom: 5px solid var(--highlight-color);
}

h1 {
    font-size: 2.8em;
    margin-bottom: 10px;
}

h2 {
    font-size: 2em;
    color: var(--primary-color);
    margin-top: 30px;
    border-bottom: 2px solid var(--border-color);
    padding-bottom: 5px;
}

h3 {
    font-size: 1.6em;
    color: var(--primary-color);
    margin-top: 25px;
}

p {
    margin-bottom: 15px;
}

.concept-section {
    background-color: var(--background-color);
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.dof-example {
    background-color: var(--background-color);
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.illustration-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    margin-top: 20px;
    padding: 20px;
    border: 1px dashed var(--border-color);
    border-radius: 5px;
    background-color: #f9f9f9;
}

.visual-area {
    position: relative;
    width: 250px;
    height: 250px;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px solid var(--border-color);
    background-color: #fff;
    overflow: hidden; /* For clipping any overflowing animations */
}

.controls {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center;
}

.controls button {
    padding: 10px 15px;
    font-size: 0.9em;
    border: none;
    border-radius: 5px;
    background-color: var(--primary-color);
    color: white;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.controls button:hover {
    background-color: #3d7cc8;
}

/* Node styles */
.node {
    position: absolute;
    width: var(--node-size);
    height: var(--node-size);
    background-color: var(--primary-color);
    border-radius: 50%;
    z-index: 10;
    transition: transform 0.1s ease-out; /* Smooth transition for quick movement */
}

/* 1D Illustration */
#illustration-1d .visual-area {
    border: none; /* No border for 1D, just a line */
}
.node-line {
    position: absolute;
    width: 150px;
    height: 2px;
    background-color: var(--border-color);
    z-index: 5;
}
.node-1d {
    left: calc(50% - var(--node-size) / 2);
    top: calc(50% - var(--node-size) / 2);
}

/* 2D Illustration */
.node-plane {
    position: absolute;
    width: 180px;
    height: 180px;
    border: 1px solid var(--border-color);
    background-color: #fefefe;
    z-index: 5;
}
.node-2d {
    left: calc(50% - var(--node-size) / 2);
    top: calc(50% - var(--node-size) / 2);
}

/* 3D Illustration */
.axes-3d {
    transform-style: preserve-3d;
    transform: rotateX(30deg) rotateY(45deg); /* Isometric transform */
    background-color: #fefefe;
    border: 1px solid var(--border-color);
}
.node-3d {
    left: calc(50% - var(--node-size) / 2);
    top: calc(50% - var(--node-size) / 2);
    transform-style: preserve-3d;
}

/* Axes for 3D */
.axis {
    position: absolute;
    background-color: var(--primary-color);
    pointer-events: none;
}
.x-axis {
    width: 160px;
    height: 2px;
    top: 50%;
    left: calc(50% - 80px);
}
.y-axis {
    width: 2px;
    height: 160px;
    left: 50%;
    top: calc(50% - 80px);
}
.z-axis {
    width: 2px;
    height: 160px;
    left: calc(50% - 1px); /* Centered for 2px width */
    top: calc(50% - 80px);
    transform: rotateX(90deg); /* Aligns with the local Z-axis in isometric view */
    transform-origin: center center;
    background-color: #6a9edb; /* Slightly different color for Z */
}

/* Static Indicators (Arrows/Arcs) */
.indicator {
    position: absolute;
    background-color: var(--primary-color);
    opacity: 0.5; /* Slightly faded when static */
    pointer-events: none;
}

/* 1D Indicators */
.x-indicator-1d {
    width: var(--indicator-line-length);
    height: 2px;
    top: calc(50% - 1px);
}
.x-indicator-1d.left { left: calc(50% - var(--indicator-line-length) - 10px); }
.x-indicator-1d.right { right: calc(50% - var(--indicator-line-length) - 10px); }

/* Arrow heads for 1D, 2D translation, 3D translation*/
.indicator::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    border: 5px solid transparent;
}
/* Left arrow head */
.x-indicator-1d.left::after, .x-indicator-2d.left::after, .x-indicator-3d.left::after, .x-indicator-3d-6dof.left::after {
    right: 0;
    top: -4px;
    border-left-color: var(--primary-color);
    border-right-width: 0;
}
/* Right arrow head */
.x-indicator-1d.right::after, .x-indicator-2d.right::after, .x-indicator-3d.right::after, .x-indicator-3d-6dof.right::after {
    left: 0;
    top: -4px;
    border-right-color: var(--primary-color);
    border-left-width: 0;
}
/* Up arrow head */
.y-indicator-2d.up::after, .y-indicator-3d.up::after, .y-indicator-3d-6dof.up::after {
    bottom: 0;
    left: -4px;
    border-top-color: var(--primary-color);
    border-bottom-width: 0;
}
/* Down arrow head */
.y-indicator-2d.down::after, .y-indicator-3d.down::after, .y-indicator-3d-6dof.down::after {
    top: 0;
    left: -4px;
    border-bottom-color: var(--primary-color);
    border-top-width: 0;
}

/* 2D Indicators */
.x-indicator-2d {
    width: var(--indicator-line-length);
    height: 2px;
    top: calc(50% - 1px);
}
.x-indicator-2d.left { left: calc(50% - var(--indicator-line-length) - 10px); }
.x-indicator-2d.right { right: calc(50% - var(--indicator-line-length) - 10px); }

.y-indicator-2d {
    width: 2px;
    height: var(--indicator-line-length);
    left: calc(50% - 1px);
}
.y-indicator-2d.up { top: calc(50% - var(--indicator-line-length) - 10px); }
.y-indicator-2d.down { bottom: calc(50% - var(--indicator-line-length) - 10px); }


/* 3D Indicators */
.x-indicator-3d, .y-indicator-3d, .z-indicator-3d {
    position: absolute;
    background-color: var(--primary-color);
    opacity: 0.5;
    pointer-events: none;
}

/* X Translation 3D */
.x-indicator-3d {
    width: var(--indicator-line-length);
    height: 2px;
    top: calc(50% - 1px);
    transform-style: preserve-3d;
}
.x-indicator-3d.left { left: calc(50% - var(--indicator-line-length) - 10px); }
.x-indicator-3d.right { right: calc(50% - var(--indicator-line-length) - 10px); }

/* Y Translation 3D */
.y-indicator-3d {
    width: 2px;
    height: var(--indicator-line-length);
    left: calc(50% - 1px);
    transform-style: preserve-3d;
}
.y-indicator-3d.up { top: calc(50% - var(--indicator-line-length) - 10px); }
.y-indicator-3d.down { bottom: calc(50% - var(--indicator-line-length) - 10px); }

/* Z Translation 3D (visual depth) */
.z-indicator-3d {
    width: 2px;
    height: var(--indicator-line-length);
    left: calc(50% - 1px);
    top: calc(50% - var(--indicator-line-length) / 2);
    transform-style: preserve-3d;
    transform-origin: center center;
    transform: rotateX(90deg); /* Aligns with the local Z-axis */
    background-color: #6a9edb; /* Match Z-axis color */
    opacity: 0.5;
}
.z-indicator-3d.front {
    transform: rotateX(90deg) translateZ(calc(var(--indicator-line-length) / 2 + 10px)); /* Move forward along Z */
}
.z-indicator-3d.back {
    transform: rotateX(90deg) translateZ(calc(-var(--indicator-line-length) / 2 - 10px)); /* Move backward along Z */
}
.z-indicator-3d.front::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    border: 5px solid transparent;
    border-top-color: #6a9edb; /* Arrow points 'forward' */
    bottom: 0; /* At the end of the line */
    left: -4px; /* Centered with the 2px line */
}
.z-indicator-3d.back::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    border: 5px solid transparent;
    border-bottom-color: #6a9edb; /* Arrow points 'backward' */
    top: 0; /* At the start of the line */
    left: -4px; /* Centered with the 2px line */
}

/* Animations */
.node.x-translation {
    animation: x-translation-anim 0.8s ease-in-out forwards;
}
.node.y-translation {
    animation: y-translation-anim 0.8s ease-in-out forwards;
}
/* For 3D Z-translation, the entire visual-area (plate) moves */
.visual-area.axes-3d.z-translation {
    animation: z-translation-anim 0.8s ease-in-out forwards;
}

@keyframes x-translation-anim {
    0% { transform: translateX(0); }
    50% { transform: translateX(40px); }
    100% { transform: translateX(0); }
}

@keyframes y-translation-anim {
    0% { transform: translateY(0); }
    50% { transform: translateY(-40px); }
    100% { transform: translateY(0); }
}

/* Z-translation animation for the entire 3D plate, preserving its isometric view */
@keyframes z-translation-anim {
    0% { transform: rotateX(30deg) rotateY(45deg) translateZ(0); }
    50% { transform: rotateX(30deg) rotateY(45deg) translateZ(40px); }
    100% { transform: rotateX(30deg) rotateY(45deg) translateZ(0); }
}

/* New section for 2D with 3 DOFs (Translation X, Y, Rotation Z) */
#illustration-2d-rotation .visual-area {
    transform-style: preserve-3d; /* Needed for child elements to rotate in 3D space */
    transform: none; /* Ensure no initial isometric transform, it's flat */
    /* Inherits background-color: #fff; and border from .visual-area */
}

/* The actual "plate" that moves and contains the node and axes */
.node-plane-2d-rotation {
    position: absolute;
    width: 180px;
    height: 180px;
    border: 1px solid var(--border-color);
    background-color: #fefefe;
    z-index: 5;
}

/* Node for 2D with rotation */
.node-2d-rotation {
    left: calc(50% - var(--node-size) / 2);
    top: calc(50% - var(--node-size) / 2);
    z-index: 10;
}

/* Flat axes for 2D, centered */
.x-axis-flat {
    position: absolute;
    width: 160px;
    height: 2px;
    top: 50%;
    left: calc(50% - 80px);
    background-color: var(--primary-color);
    pointer-events: none;
    z-index: 6; /* Above the plane, below the node */
}
.y-axis-flat {
    position: absolute;
    width: 2px;
    height: 160px;
    left: 50%;
    top: calc(50% - 80px);
    background-color: var(--primary-color);
    pointer-events: none;
    z-index: 6;
}

/* Z Rotation Indicator */
.rotation-indicator.z-rotation-2d {
    position: absolute;
    width: 80px;
    height: 80px;
    border: 2px dashed var(--highlight-color);
    border-radius: 50%;
    left: calc(50% - 40px);
    top: calc(50% - 40px);
    z-index: 8;
    pointer-events: none;
    opacity: 0.7;
}

.rotation-indicator.z-rotation-2d::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    border: 8px solid transparent;
    border-left-color: var(--highlight-color); /* Arrow pointing right (clockwise direction) */
    top: 50%;
    right: -10px; /* Positioned outside the circle, on the right */
    transform: translateY(-50%); /* Center vertically */
}

/* Z-rotation animation for the 2D plate */
#illustration-2d-rotation .visual-area.z-rotation {
    animation: z-rotation-anim-2d 0.8s ease-in-out forwards;
}

@keyframes z-rotation-anim-2d {
    0% { transform: rotateZ(0deg); }
    50% { transform: rotateZ(90deg); } /* Rotate 90 degrees clockwise */
    100% { transform: rotateZ(0deg); }
}

/* New section for 3D with 6 DOFs */
#illustration-3d-6dof .visual-area {
    /* Base for the 3D scene, establishes isometric view */
    transform-style: preserve-3d;
    transform: rotateX(30deg) rotateY(45deg); /* Isometric transform for the whole visual context */
    background-color: #fefefe;
    border: 1px solid var(--border-color);
}

.dof-plate-3d-6dof {
    position: absolute;
    width: 180px; /* Dimensions of the plate */
    height: 180px;
    border: 1px solid var(--primary-color); /* Plate border */
    background-color: rgba(255, 255, 255, 0.7); /* Slightly transparent white for the plate */
    left: calc(50% - 90px); /* Center the plate within its parent */
    top: calc(50% - 90px);
    transform-style: preserve-3d; /* Allows its children to maintain 3D transforms */
    /* Initial transform for the plate itself, relative to the visual area. Can be 0,0,0 */
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); 
    transition: transform 0.1s ease-out; /* For smooth transitions of node/axis when plate rotates */
}

/* Node for 3D with 6 DOFs */
.node-3d-6dof {
    left: calc(50% - var(--node-size) / 2);
    top: calc(50% - var(--node-size) / 2);
    transform-style: preserve-3d;
    z-index: 10;
}

/* Axes for 3D 6DOF, positioned relative to the dof-plate */
.x-axis-3d-6dof {
    position: absolute;
    width: 160px;
    height: 2px;
    top: 50%;
    left: calc(50% - 80px);
    background-color: var(--primary-color);
    pointer-events: none;
    z-index: 6;
}
.y-axis-3d-6dof {
    position: absolute;
    width: 2px;
    height: 160px;
    left: 50%;
    top: calc(50% - 80px);
    background-color: var(--primary-color);
    pointer-events: none;
    z-index: 6;
}
.z-axis-3d-6dof {
    position: absolute;
    width: 2px;
    height: 160px;
    left: calc(50% - 1px);
    top: calc(50% - 80px);
    transform: rotateX(90deg); /* Aligns with local Z-axis */
    transform-origin: center center;
    background-color: #6a9edb;
    pointer-events: none;
    z-index: 6;
}

/* Translation indicators for 3D 6DOF */
/* These should be inside .dof-plate-3d-6dof, so they rotate with it */
.x-indicator-3d-6dof, .y-indicator-3d-6dof, .z-indicator-3d-6dof {
    position: absolute;
    background-color: var(--primary-color);
    opacity: 0.5;
    pointer-events: none;
    z-index: 7; /* Above axes, below node */
}

/* X Translation 3D 6DOF */
.x-indicator-3d-6dof {
    width: var(--indicator-line-length);
    height: 2px;
    top: calc(50% - 1px);
    transform-style: preserve-3d;
}
.x-indicator-3d-6dof.left { left: calc(50% - var(--indicator-line-length) - 10px); }
.x-indicator-3d-6dof.right { right: calc(50% - var(--indicator-line-length) - 10px); }

/* Y Translation 3D 6DOF */
.y-indicator-3d-6dof {
    width: 2px;
    height: var(--indicator-line-length);
    left: calc(50% - 1px);
    transform-style: preserve-3d;
}
.y-indicator-3d-6dof.up { top: calc(50% - var(--indicator-line-length) - 10px); }
.y-indicator-3d-6dof.down { bottom: calc(50% - var(--indicator-line-length) - 10px); }

/* Z Translation 3D 6DOF */
.z-indicator-3d-6dof {
    width: 2px;
    height: var(--indicator-line-length);
    left: calc(50% - 1px);
    top: calc(50% - var(--indicator-line-length) / 2);
    transform-style: preserve-3d;
    transform-origin: center center;
    transform: rotateX(90deg); /* Aligns with the local Z-axis */
    background-color: #6a9edb; /* Match Z-axis color */
    opacity: 0.5;
}
.z-indicator-3d-6dof.front {
    transform: rotateX(90deg) translateZ(calc(var(--indicator-line-length) / 2 + 10px));
}
.z-indicator-3d-6dof.back {
    transform: rotateX(90deg) translateZ(calc(-var(--indicator-line-length) / 2 - 10px));
}
.z-indicator-3d-6dof.front::after {
    content: ''; position: absolute; width: 0; height: 0; border: 5px solid transparent;
    border-top-color: #6a9edb; bottom: 0; left: -4px;
}
.z-indicator-3d-6dof.back::after {
    content: ''; position: absolute; width: 0; height: 0; border: 5px solid transparent;
    border-bottom-color: #6a9edb; top: 0; left: -4px;
}

/* Animations for 3D 6DOF */
/* Node translations for 3D 6DOF */
.node-3d-6dof.x-translation {
    animation: x-translation-anim 0.8s ease-in-out forwards;
}
.node-3d-6dof.y-translation {
    animation: y-translation-anim 0.8s ease-in-out forwards;
}
.node-3d-6dof.z-translation {
    /* For node Z translation, we need a new animation, as the existing one moves the visual-area */
    animation: z-translation-node-anim 0.8s ease-in-out forwards;
}

/* New animation for node Z translation */
@keyframes z-translation-node-anim {
    0% { transform: translateZ(0); }
    50% { transform: translateZ(40px); } /* Translate along local Z axis */
    100% { transform: translateZ(0); }
}

/* Plate rotations for 3D 6DOF */
.dof-plate-3d-6dof.x-rotation {
    animation: x-rotation-anim-3d 0.8s ease-in-out forwards;
}
.dof-plate-3d-6dof.y-rotation {
    animation: y-rotation-anim-3d 0.8s ease-in-out forwards;
}
.dof-plate-3d-6dof.z-rotation {
    animation: z-rotation-anim-3d 0.8s ease-in-out forwards;
}

@keyframes x-rotation-anim-3d {
    0% { transform: rotateX(0deg); }
    50% { transform: rotateX(90deg); }
    100% { transform: rotateX(0deg); }
}

@keyframes y-rotation-anim-3d {
    0% { transform: rotateY(0deg); }
    50% { transform: rotateY(90deg); }
    100% { transform: rotateY(0deg); }
}

@keyframes z-rotation-anim-3d {
    0% { transform: rotateZ(0deg); }
    50% { transform: rotateZ(90deg); }
    100% { transform: rotateZ(0deg); }
}